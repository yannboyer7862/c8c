#ifndef EMULATOR_H
#define EMULATOR_H

#include "cpu.h"
#include "memory.h"
#include "render_table.h"
#include "audio.h"
#include "consts.h"

#define FONTSET_SIZE 80
static uint8_t FONTSET[FONTSET_SIZE] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80, // F
};

typedef struct {
    CPU cpu;
    Memory memory;
    RenderTable render_table;
    Audio audio_player;
} Emulator;

#define MAX_ROM_SIZE (0xFFF - PROCESSOR_INTERNAL_PROGRAM_COUNTER_START)

void emulator_init(Emulator* emulator);
void emulator_load_rom(Emulator* emulator, const char* rom_path);
bool emulator_is_pixel_on(Emulator* emulator, uint8_t x, uint8_t y);
void emulator_update_cpu_timers(Emulator* emulator);
void emulator_execute_cpu_instruction(Emulator* emulator);
void emulator_deinit(Emulator* emulator);

#endif
